generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  userId         String           @id
  firstName      String
  middleName     String?
  lastName       String
  email          String           @unique
  password       String
  userStatus     Int              @default(1)
  cart           Cart?
  purchases      Purchase[]
  favorites      Favorite[]
  ProductComment ProductComment[]
  CommentLike    CommentLike[]
}

model Product {
  productId      String           @id
  name           String
  category       String
  description    String?
  price          Decimal          @db.Decimal(9, 2)
  amount         Int?             @default(0)
  cartProducts   CartProduct[]
  favorites      Favorite[]
  ProductComment ProductComment[]
  ProductPic     ProductPic[]
}

model ProductPic {
  productPicId String @id
  productPic   String

  product   Product @relation(fields: [productId], references: [productId])
  productId String
}

model Cart {
  cartId     String   @id
  totalValue Decimal? @db.Decimal(9, 2)

  User         User          @relation(fields: [userId], references: [userId])
  userId       String        @unique
  purchase     Purchase?
  cartProducts CartProduct[]
}

model CartProduct {
  cartProductId String @id
  amount        Int

  Product   Product @relation(fields: [productId], references: [productId])
  productId String
  Cart      Cart    @relation(fields: [cartId], references: [cartId])
  cartId    String
}

model Purchase {
  purchaseId String   @id
  date       DateTime @default(now())

  user   User   @relation(fields: [userId], references: [userId])
  userId String
  cart   Cart   @relation(fields: [cardId], references: [cartId])
  cardId String @unique
}

model Favorite {
  favoriteId String @id

  product   Product @relation(fields: [productId], references: [productId])
  user      User    @relation(fields: [userId], references: [userId])
  productId String
  userId    String
}

model ProductComment {
  productCommentId String   @id
  comment          String?  @db.VarChar(255)
  date             DateTime @default(now())
  stars            Int

  product     Product       @relation(fields: [productId], references: [productId])
  productId   String
  user        User          @relation(fields: [userId], references: [userId])
  userId      String
  CommentPic  CommentPic[]
  CommentLike CommentLike[]
}

model CommentPic {
  commentPicId String  @id
  picture      String?

  productComment   ProductComment @relation(fields: [productCommentId], references: [productCommentId])
  productCommentId String
}

model CommentLike {
  commentLikeId String @id

  user             User           @relation(fields: [userId], references: [userId])
  userId           String
  productComment   ProductComment @relation(fields: [productCommentId], references: [productCommentId])
  productCommentId String
}
